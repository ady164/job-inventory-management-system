  <%= form_with(model: [:admin, @user], local: true, id: "user-form", html: { multipart: true }) do |f| %>
    <table class="details-form-table">
      <tr>
        <td><%= f.label :name %></td>
        <td>
          <%= f.text_field :name, class: "form-control", required: true %>
          <% if @user.errors[:name].any? %>
            <div class="error-message"><%= @user.errors[:name].first %></div>
          <% end %>
        </td>
      </tr>

      <tr>
        <td><%= f.label :email %></td>
        <td>
          <%= f.email_field :email, class: "form-control", required: true %>
          <% if @user.errors[:email].any? %>
            <div class="error-message"><%= @user.errors[:email].first %></div>
          <% end %>
        </td>
      </tr>

      <tr>
        <td><label for="password">Password</label></td>
        <td>
          <input type="password" id="password" class="form-control" minlength="6" />
          <% if @user.errors[:password_hash].any? %>
            <div class="error-message"><%= @user.errors[:password_hash].first %></div>
          <% end %>
        </td>
      </tr>

      <tr>
        <td><label for="password_confirmation">Password Confirmation</label></td>
        <td>
          <input type="password" id="password_confirmation" class="form-control" minlength="6" />
        </td>
      </tr>

      <tr>
        <td><label for="pin">PIN</label></td>
        <td>
          <input type="password" id="pin" class="form-control" minlength="6" maxlength="6" pattern="\d{6}" />
          <% if @user.errors[:pin_hash].any? %>
            <div class="error-message"><%= @user.errors[:pin_hash].first %></div>
          <% end %>
        </td>
      </tr>

      <tr>
        <td><label for="pin_confirmation">PIN Confirmation</label></td>
        <td>
          <input type="password" id="pin_confirmation" class="form-control" minlength="6" maxlength="6" pattern="\d{6}" />
        </td>
      </tr>

      <tr>
        <td><%= f.label :man_hour_rate %></td>
        <td>
          <%= f.number_field :man_hour_rate, step: 0.01 %>
          <% if @user.errors[:man_hour_rate].any? %>
            <div class="error"><%= @user.errors[:man_hour_rate].join(', ') %></div>
          <% end %>
        </td>
      </tr>

      <%= f.hidden_field :password_hash, id: "password_hash" %>
      <%= f.hidden_field :pin_hash, id: "pin_hash" %>

      <tr>
        <td><%= f.label :role_id, "Role" %></td>
        <td>
          <%= f.collection_select :role_id, Role.all, :id, :name, { prompt: "Select Role" }, { class: "form-control", required: true } %>
          <% if @user.errors[:role_id].any? %>
            <div class="error-message"><%= @user.errors[:role_id].first %></div>
          <% end %>
        </td>
      </tr>

      <% if @user.errors.any? %>
        <tr>
          <td colspan="2">
            <div class="alert alert-danger">
              <ul>
                <% @user.errors.full_messages.each do |msg| %>
                  <li><%= msg %></li>
                <% end %>
              </ul>
            </div>
          </td>
        </tr>
      <% end %>
      <tr>
        <td colspan="2" style="text-align: right; padding-top: 15px;">
        <% if action_name == 'edit' %>
          <%= f.submit "Update User", class: "btn-save" %>
        <% end %>
        <% if action_name == 'new' %>
          <%= f.submit "Create User", class: "btn-save" %>
        <% end %>
          <%= link_to 'Back to List', admin_users_path, class: 'btn-back' %>
        </td>
      </tr>
      <% if action_name == 'edit' && current_user&.has_permission?('delete_admin') %>
        <tr>
          <td colspan="2" style="text-align: right; padding-top: 35px;">
            <%= link_to 'Delete', admin_user_path(@user), method: :delete, data: { turbo: false, confirm: 'Are you sure?' }, class: 'btn-delete' %>
          </td>
        </tr>
      <% end %>
    </table>
  <% end %>

<script>
  document.getElementById('user-form').addEventListener('submit', async function (e) {
    e.preventDefault();

    const pw = document.getElementById('password').value;
    const pwConfirm = document.getElementById('password_confirmation').value;
    const pin = document.getElementById('pin').value;
    const pinConfirm = document.getElementById('pin_confirmation').value;

    if (pw !== pwConfirm) {
      alert("Passwords do not match.");
      return;
    }

    if (pw && pw.length < 6) {
      alert("Password must be at least 6 characters.");
      return;
    }

    if (pin !== pinConfirm) {
      alert("PINs do not match.");
      return;
    }

    if (pin && !/^\d{6}$/.test(pin)) {
      alert("PIN must be exactly 6 digits.");
      return;
    }

    // Hashing function
    const hash = async (str) => {
      const buffer = new TextEncoder().encode(str);
      const digest = await crypto.subtle.digest("SHA-256", buffer);
      return Array.from(new Uint8Array(digest)).map(b => b.toString(16).padStart(2, '0')).join('');
    };

    // Hash values if provided
    const pwHash = pw ? await hash(pw) : '';
    const pinHash = pin ? await hash(pin) : '';

    document.getElementById('password_hash').value = pwHash;
    document.getElementById('pin_hash').value = pinHash;

    // Clear original fields (optional)
    document.getElementById('password').value = '';
    document.getElementById('password_confirmation').value = '';
    document.getElementById('pin').value = '';
    document.getElementById('pin_confirmation').value = '';

    // Now submit the form
    e.target.submit();
  });
</script>
